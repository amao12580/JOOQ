/**
 * This class is generated by jOOQ
 */
package com.study.jooq.common.generated.tables;


import com.study.jooq.common.generated.Study;
import com.study.jooq.common.generated.tables.records.UserwithorderRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * VIEW
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Userwithorder extends TableImpl<UserwithorderRecord> {

	private static final long serialVersionUID = 402864686;

	/**
	 * The reference instance of <code>study.userwithorder</code>
	 */
	public static final Userwithorder USERWITHORDER = new Userwithorder();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<UserwithorderRecord> getRecordType() {
		return UserwithorderRecord.class;
	}

	/**
	 * The column <code>study.userwithorder.uid</code>. 用户id
	 */
	public final TableField<UserwithorderRecord, Integer> UID = createField("uid", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "用户id");

	/**
	 * The column <code>study.userwithorder.name</code>. 姓名
	 */
	public final TableField<UserwithorderRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(10), this, "姓名");

	/**
	 * The column <code>study.userwithorder.order_id</code>. 订单编号
	 */
	public final TableField<UserwithorderRecord, Integer> ORDER_ID = createField("order_id", org.jooq.impl.SQLDataType.INTEGER, this, "订单编号");

	/**
	 * The column <code>study.userwithorder.status</code>. 订单状态
	 */
	public final TableField<UserwithorderRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT, this, "订单状态");

	/**
	 * The column <code>study.userwithorder.amout</code>. 订单金额(单位为分)
	 */
	public final TableField<UserwithorderRecord, Long> AMOUT = createField("amout", org.jooq.impl.SQLDataType.BIGINT, this, "订单金额(单位为分)");

	/**
	 * Create a <code>study.userwithorder</code> table reference
	 */
	public Userwithorder() {
		this("userwithorder", null);
	}

	/**
	 * Create an aliased <code>study.userwithorder</code> table reference
	 */
	public Userwithorder(String alias) {
		this(alias, USERWITHORDER);
	}

	private Userwithorder(String alias, Table<UserwithorderRecord> aliased) {
		this(alias, aliased, null);
	}

	private Userwithorder(String alias, Table<UserwithorderRecord> aliased, Field<?>[] parameters) {
		super(alias, Study.STUDY, aliased, parameters, "VIEW");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Userwithorder as(String alias) {
		return new Userwithorder(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Userwithorder rename(String name) {
		return new Userwithorder(name, null);
	}
}
