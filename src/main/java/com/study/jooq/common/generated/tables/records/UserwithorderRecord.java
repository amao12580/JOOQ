/**
 * This class is generated by jOOQ
 */
package com.study.jooq.common.generated.tables.records;


import com.study.jooq.common.generated.tables.Userwithorder;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record5;
import org.jooq.Row;
import org.jooq.Row5;
import org.jooq.impl.TableRecordImpl;


/**
 * VIEW
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserwithorderRecord extends TableRecordImpl<UserwithorderRecord> implements Record5<Integer, String, Integer, Byte, Long> {

	private static final long serialVersionUID = 599660207;

	/**
	 * Setter for <code>study.userwithorder.uid</code>. 用户id
	 */
	public void setUid(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>study.userwithorder.uid</code>. 用户id
	 */
	public Integer getUid() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>study.userwithorder.name</code>. 姓名
	 */
	public void setName(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>study.userwithorder.name</code>. 姓名
	 */
	public String getName() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>study.userwithorder.order_id</code>. 订单编号
	 */
	public void setOrderId(Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>study.userwithorder.order_id</code>. 订单编号
	 */
	public Integer getOrderId() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>study.userwithorder.status</code>. 订单状态
	 */
	public void setStatus(Byte value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>study.userwithorder.status</code>. 订单状态
	 */
	public Byte getStatus() {
		return (Byte) getValue(3);
	}

	/**
	 * Setter for <code>study.userwithorder.amout</code>. 订单金额(单位为分)
	 */
	public void setAmout(Long value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>study.userwithorder.amout</code>. 订单金额(单位为分)
	 */
	public Long getAmout() {
		return (Long) getValue(4);
	}

	// -------------------------------------------------------------------------
	// Record5 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<Integer, String, Integer, Byte, Long> fieldsRow() {
		return (Row5) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<Integer, String, Integer, Byte, Long> valuesRow() {
		return (Row5) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Userwithorder.USERWITHORDER.UID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Userwithorder.USERWITHORDER.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return Userwithorder.USERWITHORDER.ORDER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Byte> field4() {
		return Userwithorder.USERWITHORDER.STATUS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field5() {
		return Userwithorder.USERWITHORDER.AMOUT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getUid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getOrderId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Byte value4() {
		return getStatus();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value5() {
		return getAmout();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserwithorderRecord value1(Integer value) {
		setUid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserwithorderRecord value2(String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserwithorderRecord value3(Integer value) {
		setOrderId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserwithorderRecord value4(Byte value) {
		setStatus(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserwithorderRecord value5(Long value) {
		setAmout(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserwithorderRecord values(Integer value1, String value2, Integer value3, Byte value4, Long value5) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached UserwithorderRecord
	 */
	public UserwithorderRecord() {
		super(Userwithorder.USERWITHORDER);
	}

	/**
	 * Create a detached, initialised UserwithorderRecord
	 */
	public UserwithorderRecord(Integer uid, String name, Integer orderId, Byte status, Long amout) {
		super(Userwithorder.USERWITHORDER);

		setValue(0, uid);
		setValue(1, name);
		setValue(2, orderId);
		setValue(3, status);
		setValue(4, amout);
	}
}
